{"ast":null,"code":"import actions from './citizens.actions';\nimport { getAllCitizens, getCitizenById } from '../../../api/apiCitizens';\nexport const loadCitizensAsync = () => {\n  return dispatch => {\n    dispatch(actions.citizensLoadStart());\n    getAllCitizens().then(response => {\n      dispatch(actions.citizensLoadSuccess(response.data));\n    }).catch(error => dispatch(actions.citizensLoadError(error.message)));\n  };\n};\nexport const loadCitizenByIdAsync = id => {\n  return dispatch => {\n    dispatch(actions.citizenIdLoadStart());\n    getCitizenById(id).then(response => dispatch(actions.citizenIdLoadSuccess(response.data))).catch(error => dispatch(actions.citizenIdLoadError(error.message)));\n  };\n};\nexport const appendCitizen = citizen => {\n  return dispatch => {\n    dispatch(actions.citizenAppend(citizen));\n  };\n};\nexport const updateCitizenInTable = citizen => {\n  return dispatch => {\n    dispatch(actions.citizenUpdate(citizen));\n  };\n};\nexport const deleteCitizenInTable = id => {\n  return dispatch => {\n    dispatch(actions.citizenDelete(id));\n  };\n};\nexport const resetCitizen = () => {\n  return dispatch => {\n    dispatch(actions.citizenReset());\n  };\n};\nexport const addFilterList = filterList => {\n  return dispatch => {\n    dispatch(actions.citizenAddFilterList(filterList));\n  };\n};","map":{"version":3,"sources":["/Users/nguyenhuuan/Documents/GitHub/citizenV/frontend/src/redux/reducers/citizens/citizens.thunk.js"],"names":["actions","getAllCitizens","getCitizenById","loadCitizensAsync","dispatch","citizensLoadStart","then","response","citizensLoadSuccess","data","catch","error","citizensLoadError","message","loadCitizenByIdAsync","id","citizenIdLoadStart","citizenIdLoadSuccess","citizenIdLoadError","appendCitizen","citizen","citizenAppend","updateCitizenInTable","citizenUpdate","deleteCitizenInTable","citizenDelete","resetCitizen","citizenReset","addFilterList","filterList","citizenAddFilterList"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,0BAA/C;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACJ,OAAO,CAACK,iBAAR,EAAD,CAAR;AACAJ,IAAAA,cAAc,GACbK,IADD,CACMC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACJ,OAAO,CAACQ,mBAAR,CAA4BD,QAAQ,CAACE,IAArC,CAAD,CAAR;AACH,KAHD,EAICC,KAJD,CAIOC,KAAK,IAAIP,QAAQ,CAACJ,OAAO,CAACY,iBAAR,CAA0BD,KAAK,CAACE,OAAhC,CAAD,CAJxB;AAKH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMC,oBAAoB,GAAIC,EAAD,IAAQ;AACxC,SAAOX,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACJ,OAAO,CAACgB,kBAAR,EAAD,CAAR;AACAd,IAAAA,cAAc,CAACa,EAAD,CAAd,CAAmBT,IAAnB,CAAwBC,QAAQ,IAAIH,QAAQ,CAACJ,OAAO,CAACiB,oBAAR,CAA6BV,QAAQ,CAACE,IAAtC,CAAD,CAA5C,EACiBC,KADjB,CACuBC,KAAK,IAAIP,QAAQ,CAACJ,OAAO,CAACkB,kBAAR,CAA2BP,KAAK,CAACE,OAAjC,CAAD,CADxC;AAEH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMM,aAAa,GAAIC,OAAD,IAAa;AACtC,SAAOhB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACJ,OAAO,CAACqB,aAAR,CAAsBD,OAAtB,CAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAME,oBAAoB,GAAIF,OAAD,IAAa;AAC7C,SAAOhB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACJ,OAAO,CAACuB,aAAR,CAAsBH,OAAtB,CAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMI,oBAAoB,GAAIT,EAAD,IAAQ;AACxC,SAAOX,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACJ,OAAO,CAACyB,aAAR,CAAsBV,EAAtB,CAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAG,MAAM;AAC9B,SAAOtB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACJ,OAAO,CAAC2B,YAAR,EAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMC,aAAa,GAAIC,UAAD,IAAgB;AACzC,SAAOzB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACJ,OAAO,CAAC8B,oBAAR,CAA6BD,UAA7B,CAAD,CAAR;AACH,GAFD;AAGH,CAJM","sourcesContent":["import actions from './citizens.actions';\n\nimport { getAllCitizens, getCitizenById } from '../../../api/apiCitizens';\n\nexport const loadCitizensAsync = () => {\n    return dispatch => {\n        dispatch(actions.citizensLoadStart());\n        getAllCitizens()\n        .then(response => {\n            dispatch(actions.citizensLoadSuccess(response.data));\n        })\n        .catch(error => dispatch(actions.citizensLoadError(error.message)));\n    }\n}\n\nexport const loadCitizenByIdAsync = (id) => {\n    return dispatch => {\n        dispatch(actions.citizenIdLoadStart());\n        getCitizenById(id).then(response => dispatch(actions.citizenIdLoadSuccess(response.data)))\n                        .catch(error => dispatch(actions.citizenIdLoadError(error.message)));\n    }\n}\n\nexport const appendCitizen = (citizen) => {\n    return dispatch => {\n        dispatch(actions.citizenAppend(citizen));\n    }\n}\n\nexport const updateCitizenInTable = (citizen) => {\n    return dispatch => {\n        dispatch(actions.citizenUpdate(citizen));\n    }\n}\n\nexport const deleteCitizenInTable = (id) => {\n    return dispatch => {\n        dispatch(actions.citizenDelete(id));\n    }\n}\n\nexport const resetCitizen = () => {\n    return dispatch => {\n        dispatch(actions.citizenReset());\n    }\n}\n\nexport const addFilterList = (filterList) => {\n    return dispatch => {\n        dispatch(actions.citizenAddFilterList(filterList));\n    }\n}"]},"metadata":{},"sourceType":"module"}