{"ast":null,"code":"import actions from \"./user.actions\";\nimport { apiLoginUser, apiPersistUser } from \"../../../api/apiUser\";\nexport const userLoginAsync = ({\n  username,\n  password\n}) => {\n  return dispatch => {\n    dispatch(actions.userLoginStart());\n    apiLoginUser({\n      username,\n      password\n    }).then(response => {\n      localStorage.setItem(\"token\", response.data.jwt);\n      dispatch(actions.userLoginSuccess(response.data.user_logedin));\n    }).catch(error => {\n      if (error.message === \"Request failed with status code 400\") return dispatch(actions.userLoginError(\"Password is incorrect\"));\n      return dispatch(actions.userLoginError(error.message));\n    });\n  };\n};\nexport const userLogout = () => {\n  return dispatch => {\n    localStorage.removeItem(\"token\");\n    dispatch(actions.userLogout());\n  };\n};\nexport const userPersist = () => {\n  return dispatch => {\n    dispatch(actions.userLoginStart());\n    apiPersistUser().then(response => {\n      dispatch(actions.userLoginSuccess(response.data));\n    }).catch(error => {\n      dispatch(actions.userLoginError(error.message));\n    });\n  };\n};\nexport const userFill = data => {\n  return dispatch => {\n    dispatch(actions.userLoginSuccess(data));\n  };\n};\nexport const userToggleCompletedDeclare = current => {\n  return dispatch => {\n    dispatch(actions.toggleConpletedDeclare(current));\n  };\n};","map":{"version":3,"sources":["/Users/nguyenhuuan/Documents/GitHub/final-web-assignment/src/redux/reducers/user/user.thunk.js"],"names":["actions","apiLoginUser","apiPersistUser","userLoginAsync","username","password","dispatch","userLoginStart","then","response","localStorage","setItem","data","jwt","userLoginSuccess","user_logedin","catch","error","message","userLoginError","userLogout","removeItem","userPersist","userFill","userToggleCompletedDeclare","current","toggleConpletedDeclare"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,sBAA7C;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA0B;AACpD,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACN,OAAO,CAACO,cAAR,EAAD,CAAR;AACAN,IAAAA,YAAY,CAAC;AAACG,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAD,CAAZ,CACCG,IADD,CACMC,QAAQ,IAAI;AAClBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,QAAQ,CAACG,IAAT,CAAcC,GAA5C;AACAP,MAAAA,QAAQ,CAACN,OAAO,CAACc,gBAAR,CAAyBL,QAAQ,CAACG,IAAT,CAAcG,YAAvC,CAAD,CAAR;AACC,KAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACZ,UAAGA,KAAK,CAACC,OAAN,KAAkB,qCAArB,EAA4D,OAAOZ,QAAQ,CAACN,OAAO,CAACmB,cAAR,CAAuB,uBAAvB,CAAD,CAAf;AAC5D,aAAOb,QAAQ,CAACN,OAAO,CAACmB,cAAR,CAAuBF,KAAK,CAACC,OAA7B,CAAD,CAAf;AACH,KARD;AASH,GAXD;AAYH,CAbM;AAeP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC5B,SAAOd,QAAQ,IAAI;AACfI,IAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAf,IAAAA,QAAQ,CAACN,OAAO,CAACoB,UAAR,EAAD,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAME,WAAW,GAAG,MAAM;AAC7B,SAAOhB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACN,OAAO,CAACO,cAAR,EAAD,CAAR;AACAL,IAAAA,cAAc,GAAGM,IAAjB,CAAsBC,QAAQ,IAAI;AAC9BH,MAAAA,QAAQ,CAACN,OAAO,CAACc,gBAAR,CAAyBL,QAAQ,CAACG,IAAlC,CAAD,CAAR;AACH,KAFD,EAGCI,KAHD,CAGOC,KAAK,IAAI;AAACX,MAAAA,QAAQ,CAACN,OAAO,CAACmB,cAAR,CAAuBF,KAAK,CAACC,OAA7B,CAAD,CAAR;AAAgD,KAHjE;AAKH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMK,QAAQ,GAAIX,IAAD,IAAU;AAC9B,SAAON,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACN,OAAO,CAACc,gBAAR,CAAyBF,IAAzB,CAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMY,0BAA0B,GAAIC,OAAD,IAAa;AACnD,SAAOnB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACN,OAAO,CAAC0B,sBAAR,CAA+BD,OAA/B,CAAD,CAAR;AACH,GAFD;AAGH,CAJM","sourcesContent":["import actions from \"./user.actions\";\nimport { apiLoginUser, apiPersistUser } from \"../../../api/apiUser\";\n\nexport const userLoginAsync = ({username, password}) => {\n    return dispatch => {\n        dispatch(actions.userLoginStart());\n        apiLoginUser({username, password})\n        .then(response => {\n        localStorage.setItem(\"token\", response.data.jwt)\n        dispatch(actions.userLoginSuccess(response.data.user_logedin))\n        })\n        .catch(error => {\n            if(error.message === \"Request failed with status code 400\") return dispatch(actions.userLoginError(\"Password is incorrect\"));\n            return dispatch(actions.userLoginError(error.message));\n        });\n    }\n}\n\nexport const userLogout = () => {\n    return dispatch => {\n        localStorage.removeItem(\"token\");\n        dispatch(actions.userLogout());\n    }\n}\n\nexport const userPersist = () => {\n    return dispatch => {\n        dispatch(actions.userLoginStart());\n        apiPersistUser().then(response => {\n            dispatch(actions.userLoginSuccess(response.data))\n        })\n        .catch(error => {dispatch(actions.userLoginError(error.message))});\n    \n    }\n}\n\nexport const userFill = (data) => {\n    return dispatch => {\n        dispatch(actions.userLoginSuccess(data));\n    }\n}\n\nexport const userToggleCompletedDeclare = (current) => {\n    return dispatch => {\n        dispatch(actions.toggleConpletedDeclare(current));\n    }\n}"]},"metadata":{},"sourceType":"module"}