{"ast":null,"code":"import actionTypes from './agencies.actionTypes';\nimport initialStates from './agencies.initialStates';\n\nconst agencyReducer = (state = initialStates, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case actionTypes.AGENCIES_LOAD_START:\n      return { ...state,\n        isLoadingAgencies: true\n      };\n\n    case actionTypes.AGENCIES_LOAD_SUCCESS:\n      return { ...state,\n        isLoadingAgencies: false,\n        agencies: payload\n      };\n\n    case actionTypes.AGENCIES_LOAD_ERROR:\n      return { ...state,\n        isLoadingAgencies: false,\n        errorMessage: payload\n      };\n\n    case actionTypes.AGENCY_ID_LOAD_START:\n      return { ...state,\n        isLoadingAgencyById: true\n      };\n\n    case actionTypes.AGENCY_ID_LOAD_SUCCESS:\n      return { ...state,\n        isLoadingAgencyById: false,\n        agencyById: payload\n      };\n\n    case actionTypes.AGENCY_ID_LOAD_ERROR:\n      return { ...state,\n        isLoadingAgencyById: false,\n        errorMessage: payload\n      };\n\n    case actionTypes.AGENCY_APPEND:\n      return { ...state,\n        agencies: [...state.agencies, payload]\n      };\n\n    case actionTypes.AGENCY_UPDATE:\n      let agencies = state.agencies;\n      let index = agencies.findIndex(item => item.id === payload.id);\n\n      if (index !== -1) {\n        agencies[index] = payload;\n      }\n\n      return { ...state,\n        agencies: agencies\n      };\n\n    case actionTypes.AGENCY_DELETE:\n      let new_agencies = state.agencies.filter(item => item.id !== payload);\n      return { ...state,\n        agencies: new_agencies\n      };\n\n    case actionTypes.SUBAGENCIES_LOAD_START:\n      return { ...state,\n        isLoadingSubAgencies: true\n      };\n\n    case actionTypes.SUBAGENCIES_LOAD_SUCCESS:\n      return { ...state,\n        subAgencies: payload,\n        isLoadingSubAgencies: false\n      };\n\n    case actionTypes.SUBAGENCIES_LOAD_ERROR:\n      return { ...state,\n        isLoadingSubAgencies: false,\n        errorMessage: payload\n      };\n\n    case actionTypes.AGENCY_RESET:\n      return initialStates;\n\n    default:\n      return state;\n  }\n};\n\nexport default agencyReducer;","map":{"version":3,"sources":["/Users/nguyenhuuan/Documents/GitHub/citizenV/frontend/src/redux/reducers/agencies/agencies.reducer.js"],"names":["actionTypes","initialStates","agencyReducer","state","type","payload","AGENCIES_LOAD_START","isLoadingAgencies","AGENCIES_LOAD_SUCCESS","agencies","AGENCIES_LOAD_ERROR","errorMessage","AGENCY_ID_LOAD_START","isLoadingAgencyById","AGENCY_ID_LOAD_SUCCESS","agencyById","AGENCY_ID_LOAD_ERROR","AGENCY_APPEND","AGENCY_UPDATE","index","findIndex","item","id","AGENCY_DELETE","new_agencies","filter","SUBAGENCIES_LOAD_START","isLoadingSubAgencies","SUBAGENCIES_LOAD_SUCCESS","subAgencies","SUBAGENCIES_LOAD_ERROR","AGENCY_RESET"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGF,aAAT,EAAwB;AAACG,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAxB,KAA4C;AAC9D,UAAOD,IAAP;AACI,SAAKJ,WAAW,CAACM,mBAAjB;AACI,aAAO,EACH,GAAGH,KADA;AAEHI,QAAAA,iBAAiB,EAAE;AAFhB,OAAP;;AAIJ,SAAKP,WAAW,CAACQ,qBAAjB;AACI,aAAO,EACH,GAAGL,KADA;AAEHI,QAAAA,iBAAiB,EAAE,KAFhB;AAGHE,QAAAA,QAAQ,EAAEJ;AAHP,OAAP;;AAKJ,SAAKL,WAAW,CAACU,mBAAjB;AACI,aAAO,EACH,GAAGP,KADA;AAEHI,QAAAA,iBAAiB,EAAE,KAFhB;AAGHI,QAAAA,YAAY,EAAEN;AAHX,OAAP;;AAKJ,SAAKL,WAAW,CAACY,oBAAjB;AACI,aAAO,EACH,GAAGT,KADA;AAEHU,QAAAA,mBAAmB,EAAE;AAFlB,OAAP;;AAIJ,SAAKb,WAAW,CAACc,sBAAjB;AACI,aAAO,EACH,GAAGX,KADA;AAEHU,QAAAA,mBAAmB,EAAE,KAFlB;AAGHE,QAAAA,UAAU,EAAEV;AAHT,OAAP;;AAKJ,SAAKL,WAAW,CAACgB,oBAAjB;AACI,aAAO,EACH,GAAGb,KADA;AAEHU,QAAAA,mBAAmB,EAAE,KAFlB;AAGHF,QAAAA,YAAY,EAAEN;AAHX,OAAP;;AAKJ,SAAKL,WAAW,CAACiB,aAAjB;AACI,aAAO,EACH,GAAGd,KADA;AAEHM,QAAAA,QAAQ,EAAE,CAAC,GAAGN,KAAK,CAACM,QAAV,EAAoBJ,OAApB;AAFP,OAAP;;AAIJ,SAAKL,WAAW,CAACkB,aAAjB;AACI,UAAIT,QAAQ,GAAGN,KAAK,CAACM,QAArB;AACA,UAAIU,KAAK,GAAGV,QAAQ,CAACW,SAAT,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYjB,OAAO,CAACiB,EAA/C,CAAZ;;AACA,UAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdV,QAAAA,QAAQ,CAACU,KAAD,CAAR,GAAkBd,OAAlB;AACH;;AACD,aAAO,EACH,GAAGF,KADA;AAEHM,QAAAA,QAAQ,EAAEA;AAFP,OAAP;;AAIJ,SAAKT,WAAW,CAACuB,aAAjB;AACI,UAAIC,YAAY,GAAGrB,KAAK,CAACM,QAAN,CAAegB,MAAf,CAAsBJ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYjB,OAA1C,CAAnB;AACA,aAAO,EACH,GAAGF,KADA;AAEHM,QAAAA,QAAQ,EAAEe;AAFP,OAAP;;AAIJ,SAAKxB,WAAW,CAAC0B,sBAAjB;AACI,aAAO,EACH,GAAGvB,KADA;AAEHwB,QAAAA,oBAAoB,EAAE;AAFnB,OAAP;;AAIJ,SAAK3B,WAAW,CAAC4B,wBAAjB;AACI,aAAO,EACH,GAAGzB,KADA;AAEH0B,QAAAA,WAAW,EAAExB,OAFV;AAGHsB,QAAAA,oBAAoB,EAAE;AAHnB,OAAP;;AAKJ,SAAK3B,WAAW,CAAC8B,sBAAjB;AACI,aAAO,EACH,GAAG3B,KADA;AAEHwB,QAAAA,oBAAoB,EAAE,KAFnB;AAGHhB,QAAAA,YAAY,EAAEN;AAHX,OAAP;;AAKJ,SAAKL,WAAW,CAAC+B,YAAjB;AACI,aAAO9B,aAAP;;AACJ;AACI,aAAOE,KAAP;AA5ER;AA8EH,CA/ED;;AAiFA,eAAeD,aAAf","sourcesContent":["import actionTypes from './agencies.actionTypes';\nimport initialStates from './agencies.initialStates';\n\nconst agencyReducer = (state = initialStates, {type, payload}) => {\n    switch(type){\n        case actionTypes.AGENCIES_LOAD_START:\n            return {\n                ...state,\n                isLoadingAgencies: true\n            }\n        case actionTypes.AGENCIES_LOAD_SUCCESS:\n            return {\n                ...state,\n                isLoadingAgencies: false,\n                agencies: payload,\n            }\n        case actionTypes.AGENCIES_LOAD_ERROR:\n            return {\n                ...state,\n                isLoadingAgencies: false,\n                errorMessage: payload\n            }\n        case actionTypes.AGENCY_ID_LOAD_START:\n            return {\n                ...state,\n                isLoadingAgencyById: true,\n            }\n        case actionTypes.AGENCY_ID_LOAD_SUCCESS:\n            return {\n                ...state,\n                isLoadingAgencyById: false,\n                agencyById: payload\n            }\n        case actionTypes.AGENCY_ID_LOAD_ERROR: \n            return {\n                ...state,\n                isLoadingAgencyById: false,\n                errorMessage: payload\n            }\n        case actionTypes.AGENCY_APPEND: \n            return {\n                ...state,\n                agencies: [...state.agencies, payload]\n            }\n        case actionTypes.AGENCY_UPDATE: \n            let agencies = state.agencies\n            let index = agencies.findIndex(item => item.id === payload.id)\n            if (index !== -1) {\n                agencies[index] = payload\n            }\n            return {\n                ...state,\n                agencies: agencies\n            }\n        case actionTypes.AGENCY_DELETE: \n            let new_agencies = state.agencies.filter(item => item.id !== payload)\n            return {\n                ...state,\n                agencies: new_agencies\n            }\n        case actionTypes.SUBAGENCIES_LOAD_START:\n            return {\n                ...state,\n                isLoadingSubAgencies: true,\n            }\n        case actionTypes.SUBAGENCIES_LOAD_SUCCESS:\n            return {\n                ...state,\n                subAgencies: payload,\n                isLoadingSubAgencies: false,\n            }\n        case actionTypes.SUBAGENCIES_LOAD_ERROR: \n            return {\n                ...state,\n                isLoadingSubAgencies: false,\n                errorMessage: payload\n            }\n        case actionTypes.AGENCY_RESET: \n            return initialStates\n        default:\n            return state;\n    }\n}\n\nexport default agencyReducer;"]},"metadata":{},"sourceType":"module"}