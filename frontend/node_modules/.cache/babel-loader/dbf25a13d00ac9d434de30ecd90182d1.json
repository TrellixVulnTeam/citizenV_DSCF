{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenhuuan/Documents/GitHub/final-web-assignment/src/components/Filter/Checkboxes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Autocomplete, Button } from '@mui/material';\nimport { TextField } from '@mui/material';\nimport { Checkbox } from '@mui/material';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilterList } from '../../redux/reducers/citizens/citizens.thunk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst icon = /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 14\n}, this);\n\nconst checkedIcon = /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 21\n}, this);\n\nconst FilterComponent = ({\n  type,\n  data,\n  setOpen,\n  filterList\n}) => {\n  _s();\n\n  const [selectedOptions, setSelectedOptions] = useState(filterList);\n\n  const handleChange = (event, value) => {\n    setSelectedOptions(value);\n  };\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      multiple: true,\n      id: \"checkboxes\",\n      defaultValue: filterList,\n      options: data,\n      disableCloseOnSelect: true,\n      getOptionLabel: option => option.name,\n      renderOption: (props, option, {\n        selected\n      }) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          icon: icon,\n          checkedIcon: checkedIcon,\n          style: {\n            marginRight: 8\n          },\n          checked: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), option.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this),\n      onChange: handleChange,\n      style: {\n        width: \"100%\",\n        maxWidth: 600\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        size: \"small\",\n        label: \"Ch\\u1ECDn \\u0111\\u01A1n v\\u1ECB\",\n        placeholder: \"Nh\\u1EADp t\\xEAn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, `checkox ${filterList[0]}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"8px\",\n        display: \"flex\",\n        justifyContent: \"end\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          setOpen(false);\n          dispatch(addFilterList({\n            type,\n            selectedOptions\n          }));\n        },\n        size: \"small\",\n        children: \"X\\xE1c nh\\u1EADn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FilterComponent, \"+VvAlsLKT2OG8hsZf9xzIwvrRKE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FilterComponent;\nexport default FilterComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterComponent\");","map":{"version":3,"sources":["/Users/nguyenhuuan/Documents/GitHub/final-web-assignment/src/components/Filter/Checkboxes.js"],"names":["React","useState","Autocomplete","Button","TextField","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","useDispatch","useSelector","addFilterList","icon","checkedIcon","FilterComponent","type","data","setOpen","filterList","selectedOptions","setSelectedOptions","handleChange","event","value","dispatch","option","name","props","selected","marginRight","width","maxWidth","params","marginTop","display","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Autocomplete, Button } from '@mui/material';\nimport { TextField } from '@mui/material';\nimport { Checkbox } from '@mui/material';\nimport  CheckBoxOutlineBlankIcon  from '@mui/icons-material/CheckBoxOutlineBlank';\nimport  CheckBoxIcon  from '@mui/icons-material/CheckBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilterList } from '../../redux/reducers/citizens/citizens.thunk';\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\nconst FilterComponent = ({type, data, setOpen, filterList}) => {\n    const [selectedOptions, setSelectedOptions] = useState(filterList);\n    const handleChange = (event, value) => {\n        setSelectedOptions(value)\n    }\n    const dispatch = useDispatch();\n    return (\n      <>\n        <Autocomplete\n            key={`checkox ${filterList[0]}`}\n            multiple\n            id=\"checkboxes\"\n            defaultValue={filterList}\n            options={data}\n            disableCloseOnSelect\n            getOptionLabel={(option) => option.name}\n            renderOption={(props, option, { selected }) => (\n                <li {...props}>\n                    <Checkbox\n                        icon={icon}\n                        checkedIcon={checkedIcon}\n                        style={{ marginRight: 8 }}\n                        checked={selected}\n                    />\n                {option.name}\n                </li>\n            )}\n            onChange={handleChange}\n            style={{ width: \"100%\", maxWidth: 600 }}\n            renderInput={(params) => (\n                <TextField {...params} size=\"small\" label=\"Chọn đơn vị\" placeholder=\"Nhập tên\" />\n            )}\n        />\n        <div style={{width: \"100%\", marginTop: \"8px\", display: \"flex\", justifyContent: \"end\"}}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setOpen(false);\n              dispatch(addFilterList({type, selectedOptions}));\n            }}\n            size=\"small\"\n          >\n            Xác nhận\n          </Button>\n        </div>\n      </>\n    );\n}\nexport default FilterComponent;"]},"metadata":{},"sourceType":"module"}