{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenhuuan/Documents/GitHub/final-web-assignment/src/views/Analysis/PieChartOccupation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Button, TextField } from \"@mui/material\";\nimport PieChartSubComponent from \"./PieChartComponent/PieChartSubComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst extractCitizens = (citizens, startYear, endYear) => {\n  return citizens.filter(element => {\n    return element.dob.slice(0, 4) >= startYear && element.dob.slice(0, 4) <= endYear;\n  });\n};\n\nconst categorizeCitizensByOccupation = citizens => {\n  let result = [{\n    name: \"Học Sinh\",\n    value: 0\n  }, {\n    name: \"Công Chức\",\n    value: 0\n  }, {\n    name: \"Nông Dân\",\n    value: 0\n  }, {\n    name: \"Khác\",\n    value: 0\n  }];\n  citizens.forEach(element => {\n    let exist = false;\n\n    for (let i = 0; i < result.length - 1; i++) {\n      if (result[i].name === element.occupations) {\n        result[i].value++;\n        exist = true;\n      }\n    }\n\n    if (!exist) {\n      result[result.length - 1].value++;\n    }\n  });\n  return result;\n};\n\nconst PieChartOccupation = props => {\n  _s();\n\n  const styles = {\n    root: {\n      // height: \"700px\",\n      background: \"white\",\n      width: \"100%\",\n      // minHeight: \"100%\",\n      maxHeight: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      borderRadius: \"10px\"\n    },\n    inputStyle: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"8px\",\n      padding: \"12px\"\n    },\n    title: {\n      padding: \"1rem\"\n    }\n  };\n  const {\n    citizens\n  } = useSelector(state => state.citizens);\n  const rawData = categorizeCitizensByOccupation(extractCitizens(citizens, \"1990\", \"1999\"));\n  const [data, setData] = useState(null);\n  const [years, setYears] = useState({\n    startYear: \"1990\",\n    endYear: \"1999\"\n  });\n\n  const handleChangeStartYear = e => {\n    setYears({ ...years,\n      startYear: e.target.value\n    });\n  };\n\n  const handleChangeEndYear = e => {\n    setYears({ ...years,\n      endYear: e.target.value\n    });\n  };\n\n  const handleClick = () => {\n    setData(categorizeCitizensByOccupation(extractCitizens(citizens, years.startYear, years.endYear)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"Nh\\xF3m d\\xE2n s\\u1ED1 theo ng\\xE0nh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(PieChartSubComponent, {\n        data: data ? data : rawData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputStyle,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          width: 100\n        },\n        size: \"small\",\n        onChange: handleChangeStartYear,\n        id: \"startYear\",\n        label: \"N\\u0103m\",\n        placeholder: \"N\\u0103m b\\u1EAFt \\u0111\\u1EA7u\",\n        variant: \"outlined\",\n        value: years.startYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u0111\\u1EBFn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          width: 100\n        },\n        size: \"small\",\n        onChange: handleChangeEndYear,\n        id: \"endYear\",\n        label: \"N\\u0103m\",\n        placeholder: \"N\\u0103m b\\u1EAFt \\u0111\\u1EA7u\",\n        variant: \"outlined\",\n        value: years.endYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        variant: \"contained\",\n        children: \"Tra c\\u1EE9u\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PieChartOccupation, \"hKdwiUTYvOyHPC2jk9TxosYCpKU=\", false, function () {\n  return [useSelector];\n});\n\n_c = PieChartOccupation;\nexport default PieChartOccupation;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChartOccupation\");","map":{"version":3,"sources":["/Users/nguyenhuuan/Documents/GitHub/final-web-assignment/src/views/Analysis/PieChartOccupation.js"],"names":["React","useState","useSelector","Button","TextField","PieChartSubComponent","extractCitizens","citizens","startYear","endYear","filter","element","dob","slice","categorizeCitizensByOccupation","result","name","value","forEach","exist","i","length","occupations","PieChartOccupation","props","styles","root","background","width","maxHeight","display","flexDirection","borderRadius","inputStyle","justifyContent","alignItems","gap","padding","title","state","rawData","data","setData","years","setYears","handleChangeStartYear","e","target","handleChangeEndYear","handleClick","flexGrow"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Button, TextField } from \"@mui/material\";\nimport PieChartSubComponent from \"./PieChartComponent/PieChartSubComponent\";\n\nconst extractCitizens = (citizens, startYear, endYear) => {\n  return citizens.filter(element => {\n      return element.dob.slice(0,4) >= startYear && element.dob.slice(0,4) <= endYear;\n  });\n};\n\nconst categorizeCitizensByOccupation = (citizens) => {\n  let result = [\n      { name: \"Học Sinh\", value: 0 },\n      { name: \"Công Chức\", value: 0 },\n      { name: \"Nông Dân\", value: 0 },\n      { name: \"Khác\", value: 0 }\n    ];\n  citizens.forEach(element => {\n      let exist = false;\n      for(let i = 0 ; i<result.length - 1 ; i++){\n          if(result[i].name === element.occupations){\n              result[i].value++;\n              exist = true;\n          }\n      }\n      if(!exist){\n          result[result.length - 1].value++;\n      }\n  });\n  return result;\n}\nconst PieChartOccupation = (props) => {\n  const styles={\n    root: {\n      // height: \"700px\",\n      background: \"white\",\n      width: \"100%\",\n      // minHeight: \"100%\",\n      maxHeight: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      borderRadius: \"10px\"\n    },\n    inputStyle: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"8px\",\n      padding: \"12px\"\n    },\n    title: {\n      padding: \"1rem\"\n    }\n  }\n  const {citizens} = useSelector(state => state.citizens);\n  const rawData = categorizeCitizensByOccupation(extractCitizens(citizens, \"1990\", \"1999\"));\n  const [data, setData] = useState(null);\n  const [years, setYears] = useState({startYear: \"1990\", endYear: \"1999\"});\n  const handleChangeStartYear = (e) => {\n    setYears({\n      ...years,\n      startYear: e.target.value\n    });\n  }\n  const handleChangeEndYear = (e) => {\n    setYears({\n      ...years,\n      endYear: e.target.value\n    })\n  }\n  const handleClick = () => {\n    setData(categorizeCitizensByOccupation(extractCitizens(citizens, years.startYear, years.endYear)));\n  }\n  return (\n    <div style={styles.root}>\n      <h2 style={styles.title}>Nhóm dân số theo ngành</h2>\n      <div style={{flexGrow: 1}}>\n        <PieChartSubComponent data={data ? data : rawData} />\n      </div>\n      <div style={styles.inputStyle}>\n         <TextField style={{width: 100}} size={\"small\"} onChange={handleChangeStartYear} id=\"startYear\" label=\"Năm\" placeholder=\"Năm bắt đầu\"  variant=\"outlined\" value={years.startYear}/>\n         <span>đến</span>\n         <TextField style={{width: 100}} size={\"small\"} onChange={handleChangeEndYear} id=\"endYear\" label=\"Năm\" placeholder=\"Năm bắt đầu\"  variant=\"outlined\" value={years.endYear}/>\n         <Button onClick={handleClick} variant=\"contained\">Tra cứu</Button>\n       </div>\n    </div>\n  );\n}\nexport default PieChartOccupation;\n"]},"metadata":{},"sourceType":"module"}